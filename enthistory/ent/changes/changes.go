// Code generated by entc, DO NOT EDIT.

package changes

const (
	// Label holds the string label denoting the changes type in the database.
	Label = "changes"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldColumn holds the string denoting the column field in the database.
	FieldColumn = "column"
	// FieldValue holds the string denoting the value field in the database.
	FieldValue = "value"
	// FieldPrevious holds the string denoting the previous field in the database.
	FieldPrevious = "previous"
	// EdgeOperation holds the string denoting the operation edge name in mutations.
	EdgeOperation = "operation"
	// Table holds the table name of the changes in the database.
	Table = "changes"
	// OperationTable is the table that holds the operation relation/edge.
	OperationTable = "changes"
	// OperationInverseTable is the table name for the History entity.
	// It exists in this package in order to avoid circular dependency with the "history" package.
	OperationInverseTable = "histories"
	// OperationColumn is the table column denoting the operation relation/edge.
	OperationColumn = "history_changes"
)

// Columns holds all SQL columns for changes fields.
var Columns = []string{
	FieldID,
	FieldColumn,
	FieldValue,
	FieldPrevious,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "changes"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"history_changes",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
