// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ChangesColumns holds the columns for the "changes" table.
	ChangesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "column", Type: field.TypeString},
		{Name: "value", Type: field.TypeString, Size: 2147483647},
		{Name: "previous", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "history_changes", Type: field.TypeInt, Nullable: true},
	}
	// ChangesTable holds the schema information for the "changes" table.
	ChangesTable = &schema.Table{
		Name:       "changes",
		Columns:    ChangesColumns,
		PrimaryKey: []*schema.Column{ChangesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "changes_histories_changes",
				Columns:    []*schema.Column{ChangesColumns[4]},
				RefColumns: []*schema.Column{HistoriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// EntitiesColumns holds the columns for the "entities" table.
	EntitiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "data", Type: field.TypeString},
		{Name: "is_fun", Type: field.TypeBool, Nullable: true},
		{Name: "counter", Type: field.TypeInt, Nullable: true},
		{Name: "timestamp", Type: field.TypeTime, Nullable: true},
		{Name: "strings", Type: field.TypeJSON, Nullable: true},
	}
	// EntitiesTable holds the schema information for the "entities" table.
	EntitiesTable = &schema.Table{
		Name:       "entities",
		Columns:    EntitiesColumns,
		PrimaryKey: []*schema.Column{EntitiesColumns[0]},
	}
	// HistoriesColumns holds the columns for the "histories" table.
	HistoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "entity_name", Type: field.TypeString},
		{Name: "record_id", Type: field.TypeInt},
		{Name: "timestamp", Type: field.TypeTime},
		{Name: "action", Type: field.TypeEnum, Enums: []string{"CREATE", "UPDATE", "DELETE"}},
	}
	// HistoriesTable holds the schema information for the "histories" table.
	HistoriesTable = &schema.Table{
		Name:       "histories",
		Columns:    HistoriesColumns,
		PrimaryKey: []*schema.Column{HistoriesColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ChangesTable,
		EntitiesTable,
		HistoriesTable,
	}
)

func init() {
	ChangesTable.ForeignKeys[0].RefTable = HistoriesTable
}
