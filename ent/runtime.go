// Code generated by entc, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/ariga/edit-twitter-example-app/ent/schema"
	"github.com/ariga/edit-twitter-example-app/ent/tweet"
	"github.com/ariga/edit-twitter-example-app/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	tweetFields := schema.Tweet{}.Fields()
	_ = tweetFields
	// tweetDescContent is the schema descriptor for content field.
	tweetDescContent := tweetFields[0].Descriptor()
	// tweet.ContentValidator is a validator for the "content" field. It is called by the builders before save.
	tweet.ContentValidator = tweetDescContent.Validators[0].(func(string) error)
	// tweetDescCreated is the schema descriptor for created field.
	tweetDescCreated := tweetFields[1].Descriptor()
	// tweet.DefaultCreated holds the default value on creation for the created field.
	tweet.DefaultCreated = tweetDescCreated.Default.(func() time.Time)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreated is the schema descriptor for created field.
	userDescCreated := userFields[3].Descriptor()
	// user.DefaultCreated holds the default value on creation for the created field.
	user.DefaultCreated = userDescCreated.Default.(func() time.Time)
	// userDescAge is the schema descriptor for age field.
	userDescAge := userFields[4].Descriptor()
	// user.AgeValidator is a validator for the "age" field. It is called by the builders before save.
	user.AgeValidator = userDescAge.Validators[0].(func(int) error)
}
